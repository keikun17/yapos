- model_class = Quote


.page-header
  %h1
    = t '.title', :default => @quote.quote_reference
    = link_to t('.edit', :default => t("helpers.links.edit")), edit_quote_path(@quote), :class => 'btn'
    = link_to "Requote", requote_quote_path(@quote), :class => 'btn btn-success'
    = link_to 'Print', printable_view_quote_path(@quote), :class => 'btn'
    - @quote.suppliers.uniq.each do |supplier|
      = link_to "Print only #{supplier.name} offers", printable_view_quote_path(@quote, supplier_id: supplier.id), :class => 'btn'

- unless @quote.internal_notes.blank?
  .row-fluid.internal-note{style: 'position: fixed'}
    .internal-note-content.span3.pull-right
      .alert.alert-internal-note
        %button{type: 'button', class: 'close', data: {dismiss: "alert"}} Close
        %h3 Internal Notes :
        = @quote.internal_notes

.row-fluid
  - if !@quote.title.blank?
    %h2
      = simple_format(@quote.title)

  - if !@quote.blurb.blank?
    %h4
      = simple_format(@quote.blurb)

  - if !@quote.blurb.blank? or !@quote.title.blank?
    %hr

.row-fluid

  .span3
    %p
      %strong= model_class.human_attribute_name(:quote_date) + ':'
      %br
      = @quote.quote_date.to_date

    %p
      %strong Recorderd At:
      %br
      = @quote.created_at.to_date
      (last updated at #{@quote.updated_at.to_date})

    %p
      %strong= model_class.human_attribute_name(:quote_reference) + ':'
      %br
      = @quote.quote_reference
    %p
      %strong= model_class.human_attribute_name(:order_reference) + ':'
      %br
      = @quote.order_links

  .span3
    %p
      %strong= model_class.human_attribute_name(:client_name) + ':'
      %br
      = link_to_client(@quote.client)

    %p
      %strong= model_class.human_attribute_name(:contact_person) + ':'
      %br
      = @quote.contact_person

    %p
      %strong= model_class.human_attribute_name(:description) + ':'
      %br
      = simple_format(@quote.description)


    %p
      %strong= model_class.human_attribute_name(:status) + ':'
      %br
      = @quote.display_status

  .span3
    %p
      %strong Suppliers quoted:
      %br
      = supplier_links(@quote)

    %p
      %strong Internal Notes:
      %br
      = simple_format(@quote.internal_notes, class: 'text-info')

    %p
      %strong Remarks
      %em (Will be shown at the bottom of the printable view):
      %br
      = simple_format(@quote.remarks)

    %p
      %strong= model_class.human_attribute_name(:signatory) + ':'
      %br
      = @quote.signatory

    %p
      %strong= model_class.human_attribute_name(:signatory_position) + ':'
      %br
      = @quote.signatory_position

  .span3

    %h4 Attachments
    - if @quote.attachments.empty?
      No Attachments
    - else
      %ul.attachments
        - @quote.attachments.each do |attachment|
          %li= link_to attachment[:document], quote_attachment_path(@quote, :id => attachment.id)

%h3 Requests
%table.table.table-striped
  %thead
    %tr
      %th Quoted Specs
      %th{width: '240px'} Offered Specs
      %th Supplier
      %th Delivery/Terms/Warranty
      %th Buying Price
      %th Selling Price
      %th Order Reference
      %th
  %tbody
    - @requests.each do |req|
      - offer_count = req.offers.size
      - offers = req.offers
      - offers = OfferDecorator.decorate_collection(offers)
      - offer = offers.shift
      - if offer
        - offer = OfferDecorator.new(offer)
      %tr
        %td{rowspan: offer_count}
          %strong= req.display_quantity
          = simple_format(req.specs)
          - if !req.remarks.blank?
            .text-info
              %strong Internal Notes:
              #{simple_format(req.remarks)}
        %td{width: '240px'}
          = simple_format(offer.specs) if offer
          - if offer and !offer.summary.blank?
            .alert.alert-success
              Acual :
              =offer.summary
        %td
          - if offer and offer.supplier
            = link_to offer.supplier_name, offer.supplier
        %td
          - if offer
            %strong Terms:
            = offer.terms
            %br
            %strong Delivery:
            = offer.delivery
            %br
            %strong Warranty:
            = offer.warranty
            %br
            %strong Notes:
            = offer.remarks
            %br
          %td.text-warning.price-column
            - if offer
              %strong Unit Price:
              = offer.display_buying_price
              %br
              %strong Total:
              = offer.display_total_buying_price
          %td.text-success.price-column
            - if offer
              %strong Unit Price:
              = offer.display_selling_price
              %br
              %strong Total:
              = offer.display_total_selling_price
        %td= render 'other_references', offer: offer

      - offers.each do |offer|
        %tr
          %td{width: '240px'}
            = simple_format(offer.specs)
            - if !offer.summary.blank?
              .alert.alert-success
                Acual :
                =offer.summary
          %td
            - if offer.supplier
              = link_to offer.supplier_name, offer.supplier
          %td
            %strong Terms:
            = offer.terms
            %br
            %strong Delivery:
            = offer.delivery
            %br
            %strong Warranty:
            = offer.warranty
            %br
            %strong Notes:
            = offer.remarks
            %br
          %td.text-warning.price-column
            %strong Unit Price:
            = offer.display_buying_price
            %br
            %strong Total:
            = offer.display_total_buying_price
          %td.text-success.price-column
            %strong Unit Price:
            = offer.display_selling_price
            %br
            %strong.text-success Total:
            = offer.display_total_selling_price
          %td
            = render 'other_references', offer: offer
.form-actions
  = link_to t('.back', :default => t("helpers.links.back")), quotes_path, :class => 'btn'
  = link_to t('.edit', :default => t("helpers.links.edit")), edit_quote_path(@quote), :class => 'btn'
  = link_to "Requote", requote_quote_path(@quote), :class => 'btn btn-success'
  = link_to t('.destroy', :default => t("helpers.links.destroy")), quote_path(@quote), :method => "delete", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger'
