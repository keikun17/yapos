- model_class = Quote


.quote-header
  %h1
    = t '.title', :default => @quote.quote_reference
    = link_to t('.edit', :default => t("helpers.links.edit")), edit_quote_path(@quote), :class => 'btn'
    = link_to "Requote", requote_quote_path(@quote), :class => 'btn btn-success'
    = link_to 'Print', printable_view_quote_path(@quote), :class => 'btn', target: '_blank'
    - @quote.suppliers.uniq.each do |supplier|
      = link_to "Print only #{supplier.name} offers", printable_view_quote_path(@quote, supplier_id: supplier.id), :class => 'btn'

- if @quote.internal_notes.present?
  .row-fluid.internal-note{style: 'position: fixed'}
    .internal-note-content.span3.pull-right
      .alert.alert-internal-note
        %button{type: 'button', class: 'close', data: {dismiss: "alert"}} Close
        %h3 Internal Notes :
        = @quote.internal_notes
        %br
        - if @quote.count_offers_with_internal_notes > 0
          %span.offer-internal-note-count There are #{@quote.count_offers_with_internal_notes} offers with internal notes.

.row-fluid
  - if !@quote.title.blank?
    %h2
      = simple_format(@quote.title)

  - if !@quote.blurb.blank?
    %h4
      = simple_format(@quote.blurb)

  - if !@quote.blurb.blank? or !@quote.title.blank?
    %hr

.row-fluid

  .span3
    %p
      %strong= model_class.human_attribute_name(:quote_date) + ':'
      %br
      = @quote.quote_date.to_date

    %p
      %strong Recorderd At:
      %br
      = @quote.created_at.to_date
      (last updated at #{@quote.updated_at.to_date})

    %p
      %strong= model_class.human_attribute_name(:quote_reference) + ':'
      %br
      = @quote.quote_reference
    %p
      %strong= model_class.human_attribute_name(:order_reference) + ':'
      %br
      = @quote.order_links

    %p
      .alert.alert-internal-note
        %strong Overall Internal Notes:
        %br
          = simple_format(@quote.internal_notes, class: 'text-info')
  .span3
    %p
      %strong= model_class.human_attribute_name(:client_name) + ':'
      %br
      = link_to_client(@quote.client)

    %p
      %strong= model_class.human_attribute_name(:contact_person) + ':'
      %br
      = @quote.contact_person

    %p
      %strong= model_class.human_attribute_name(:description) + ':'
      %br
      = simple_format(@quote.description)


    %p
      %strong= model_class.human_attribute_name(:status) + ':'
      %br
      = @quote.display_status

  .span3
    %p
      %strong Suppliers quoted:
      %br
      = supplier_links(@quote)


      %p
      %strong Remarks

      - unless @quote.remarks.blank?
        %em (Will be shown at the bottom of the printable view):

      %br
      = simple_format(@quote.remarks)

    %p
      %strong= model_class.human_attribute_name(:signatory) + ':'
      %br
      = @quote.signatory

    %p
      %strong= model_class.human_attribute_name(:signatory_position) + ':'
      %br
      = @quote.signatory_position

  .span3

    %h4 Attachments
    - if @quote.attachments.empty?
      No Attachments
    - else
      %ul.attachments
        - @quote.attachments.each do |attachment|
          %li= link_to attachment[:document], quote_attachment_path(@quote, :id => attachment.id)

%h3 Requests
%table.table.table-striped.quote-details
  %thead
    %tr
      %th.span3 Requested Specs
      %th.span3 Offered Specs
      %th.span1 Supplier
      %th.span2 Delivery/Terms/Warranty
      %th.span1 Buying Price
      %th.span1 Selling Price
      %th.span1 Order Reference
  %tbody
    = render 'quotes/requests', requests: @requests
.form-actions
  = link_to t('.back', :default => t("helpers.links.back")), quotes_path, :class => 'btn'
  = link_to t('.edit', :default => t("helpers.links.edit")), edit_quote_path(@quote), :class => 'btn'
  = link_to "Requote", requote_quote_path(@quote), :class => 'btn btn-success'
  = link_to t('.destroy', :default => t("helpers.links.destroy")), quote_path(@quote), :method => "delete", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger'
