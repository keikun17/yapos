.client-order-header
  %h1 Pending Client POs that needs to be ordered from Suppliers

.row-fluid
  .span12
    = render 'clients/form_with_select_to_filter_clients'

%ul.nav.nav-tabs
  %li
    - if params[:client_id].blank?
      = link_to "All", orders_path(client_id: params[:client_id])
    - else
      = link_to "All #{@client.name}", orders_path(client_id: params[:client_id])
  %li.active
    = link_to_badge("Supplier PO required", pending_orders_path(client_id: params[:client_id]), count: @po_required_count)

.pull-right=will_paginate(@orders)
%table.table.table-condensed
  %thead
    %tr
      %th.span2 PO#
      %th.span2 Client Ordered At
      %th.span2 Client
      %th Item
      %th.span2
  %tbody
    - @decorated_orders.each do |order|
      - offer_count = order.offers.count
      - offers = order.offers.decorate
      - offer = offers.shift

      - if offer
        %tr{class: offer_row_class(offer)}
          %td{rowspan: offer_count}
            %strong= link_to order.reference, order
          %td{rowspan: offer_count}
            = order.display_purchase_date
          %td
            - if offer && offer.client
              = link_to_client(offer.client)
          %td
            = offer.display_specs(quantity_class: 'label label-inverse')
            = offer.display_actual_specs

          %td
            - if offer.supplier_purchase.nil? || offer.supplier_purchase.reference.blank?
              = link_to_modal("Purchase", offer, {class: 'btn btn-mini'})
            - else
              %i Purchased

          - offers.each do |offer|
            %tr{class: offer_row_class(offer)}
              %td
                = link_to_client(offer.client)
              %td
                = offer.display_specs(quantity_class: 'label label-inverse').html_safe
                = offer.display_actual_specs

              %td
                - if offer.supplier_purchase.nil? || offer.supplier_purchase.reference.blank?
                  = link_to_modal("Purchase", offer, {class: 'btn btn-mini'})
                - else
                  %i Purchased

- @orders.each do |order|
  - order.offers.each do |offer|
    = render 'offers/modals/pending', modal_id: dom_id(offer), offer: OfferDecorator.new(offer)

.pull-right=will_paginate(@orders)
