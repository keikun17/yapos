- model_class = Order
.client-order-header
  %h1
    =t '.title', :default => model_class.model_name.human
    = "# #{@order.reference}"
    = link_to t('.edit', :default => t("helpers.links.edit")), edit_order_path(@order), :class => 'btn btn-primary'
    = link_to_modal "Set SI/DR details for all offers in this order", @order, class: 'btn btn-primary'


    - @order.supplier_purchases.where.not(reference: '').uniq.each do |supplier_purchase|
      = link_to "Print #{supplier_purchase.reference}", print_supplier_purchase_path(supplier_purchase),  class: 'btn btn-default'

= render 'orders/modals/mass_update_si_and_dr', modal_id: dom_id(@order)

%p
  %strong Client PO#
  %br
  = @order.reference
%p
  %strong Client ordered at
  %br
  = @order.display_purchase_date

%p
  %strong Record last updated
  %br
  = @order.updated_at.to_date

- if @order.custom_quote_reference.present?
  %h4 Purchase Requests :
  %p
    %strong= model_class.human_attribute_name(:custom_quote_reference) + ':'
    %br
    = @order.custom_quote_reference

%p
  %strong= model_class.human_attribute_name(:client) + ':'
  %br
  = @order.client_links

- if @order.suppliers.present?
  %p
    %strong= model_class.human_attribute_name(:supplier) + ':'
    %br
    = @order.supplier_links

%p
  %strong Total Buying Price
  %br
  = @order.display_total_buy

%p
  %strong Total Selling Price
  %br
  = @order.display_total_sell

%p
  %strong Total Profit
  %br
  = @order.display_total_profit

- if @order.description.present?
  .row
    %div.alert.alert-info
      %h3 Internal Notes :
      %p
        -# TODO : rename order.description to internal notes
        =simple_format @order.description

%h3 Attachments
- if @order.attachments.empty?
  No Attachments
- else
  %ul.attachments
    - @order.attachments.each do |attachment|
      %li= link_to attachment[:document], order_attachment_path(@order, :id => attachment.id)

%table.table.table-striped
  %thead
    %th Quote Reference
    %th Requested Spec
    %th Offered Spec
    %th Spec in Supplier PO
    %th Supplier
    %th Supplier's Price
    %th Offered Price
    %th References
    %th Supplier Purchase Ref

  %tbody
    - @quotes.each do |quote|
      - offer_count = quote.offers.where(order_reference: @order.reference).size
      - offers = quote.offers.where(order_reference: @order.reference).purchased
      - offers = OfferDecorator.decorate_collection(offers)
      - offer = offers.shift
      %tr
        %td{rowspan: offer_count}
          %strong= link_to quote.display_reference, quote
        %td
          %span.request-quantity= offer.request.display_quantity
          = offer.request_specs
        %td
          - if offer.service?
            %span.badge.badge-service Service
          = simple_format(offer.specs)
          = render 'offers/actual_offer', offer: offer

        %td= simple_format(offer.supplier_order_actual_specs)
        %td
          - if offer.supplier.present?
            = link_to offer.supplier_name, supplier_path(offer.supplier)

        %td.text-warning= offer.display_buying_price
        %td.text-success= offer.display_selling_price
        %td
          = render 'offers/other_references', offer: offer
        %td
          - unless offer.service?
            = offer.supplier_purchase_link
            = offer.edit_supplier_purchase_link
      - offers.each do |offer|
        %tr
          %td
            %span.request-quantity= offer.request.display_quantity
            = offer.request_specs
          %td
            - if offer.service?
              %span.badge.badge-service Service
            = simple_format(offer.specs)
            = render 'offers/actual_offer', offer: offer

          %td= offer.supplier_order_actual_specs
          %td
            - if offer.supplier.present?
              = link_to offer.supplier_name, supplier_path(offer.supplier)

          %td.text-warning= offer.display_buying_price
          %td.text-success= offer.display_selling_price
          %td
            = render 'offers/other_references', offer: offer
          %td
            - unless offer.service?
              = offer.supplier_purchase_link
              = offer.edit_supplier_purchase_link


.form-actions
  = link_to t('.back', :default => t("helpers.links.back")), orders_path, :class => 'btn'
  = link_to t('.edit', :default => t("helpers.links.edit")), edit_order_path(@order), :class => 'btn'
  = link_to t('.destroy', :default => t("helpers.links.destroy")), order_path(@order), :method => "delete", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger'
