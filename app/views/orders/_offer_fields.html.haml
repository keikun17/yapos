- offer = f.object.decorate
%tr.offer-line
  %td= offer.supplier_name
  %td= offer.complete_quantity
  %td
    - if offer.service?
      %span.badge.badge-service Service
    = offer.specs
    = render 'offers/actual_offer', offer: offer


  - #TODO dynamically building association in view.. YUCK!
  - # Maybe just run a rake task that makes sure all offer without supplier_orders
  - # be inserted with a blank one?
  - f.object.build_supplier_order if f.object.supplier_order.nil?
  = f.fields_for :supplier_order do |ff|
    %td= ff.text_area :actual_specs, class: 'form-control' unless f.object.service?
    %td= ff.text_field :reference, class: 'form-control' unless f.object.service?
    %td
      - unless f.object.service?
        = ff.date_select :estimated_manufactured_at,  {:prompt => { :day => 'Select day', :month => 'Select month', :year => 'Select year' }}, class: 'form-control'
    %td
      - unless f.object.service?
        = ff.date_select :estimated_delivered_at,  {:prompt => { :day => 'Select day', :month => 'Select month', :year => 'Select year' }}, class: 'form-control'

    %td
      = ff.date_select :delivered_at,  {:prompt => { :day => 'Select day', :month => 'Select month', :year => 'Select year' }}, class: 'form-control'

      = f.label :delivery_receipt_reference, "DR#"
      = f.text_field :delivery_receipt_reference, class: 'form-control'

      = ff.fields_for :offer do |ff|
        %div
          .controls#invoices
            - if ff.object.invoices.empty?
              - ff.object.invoices.build
            = ff.fields_for :invoices do |builder|
              = render 'orders/invoice_fields', :f => builder
            .row
              .col-sm-12= link_to_add_fields "Add Invoice" , ff, :invoices, '$(this).parent()', 'orders/invoice_fields'



